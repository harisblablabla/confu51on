[{"/Users/mharisfadhilah/Documents/Learn/coursera/2/confusion/src/index.js":"1","/Users/mharisfadhilah/Documents/Learn/coursera/2/confusion/src/reportWebVitals.js":"2","/Users/mharisfadhilah/Documents/Learn/coursera/2/confusion/src/App.js":"3","/Users/mharisfadhilah/Documents/Learn/coursera/2/confusion/src/components/MainComponent.js":"4","/Users/mharisfadhilah/Documents/Learn/coursera/2/confusion/src/redux/configureStore.js":"5","/Users/mharisfadhilah/Documents/Learn/coursera/2/confusion/src/components/HeaderComponent.js":"6","/Users/mharisfadhilah/Documents/Learn/coursera/2/confusion/src/components/AboutComponent.js":"7","/Users/mharisfadhilah/Documents/Learn/coursera/2/confusion/src/components/FooterComponent.js":"8","/Users/mharisfadhilah/Documents/Learn/coursera/2/confusion/src/components/MenuComponent.js":"9","/Users/mharisfadhilah/Documents/Learn/coursera/2/confusion/src/components/DishdetailComponent.js":"10","/Users/mharisfadhilah/Documents/Learn/coursera/2/confusion/src/components/HomeComponent.js":"11","/Users/mharisfadhilah/Documents/Learn/coursera/2/confusion/src/components/ContactComponent.js":"12","/Users/mharisfadhilah/Documents/Learn/coursera/2/confusion/src/redux/action/ActionCreators.js":"13","/Users/mharisfadhilah/Documents/Learn/coursera/2/confusion/src/redux/reducer/leaders.js":"14","/Users/mharisfadhilah/Documents/Learn/coursera/2/confusion/src/redux/reducer/comments.js":"15","/Users/mharisfadhilah/Documents/Learn/coursera/2/confusion/src/redux/reducer/promotions.js":"16","/Users/mharisfadhilah/Documents/Learn/coursera/2/confusion/src/redux/forms/forms.js":"17","/Users/mharisfadhilah/Documents/Learn/coursera/2/confusion/src/redux/reducer/dishes.js":"18","/Users/mharisfadhilah/Documents/Learn/coursera/2/confusion/src/components/LoadingComponent.js":"19","/Users/mharisfadhilah/Documents/Learn/coursera/2/confusion/src/shared/leaders.js":"20","/Users/mharisfadhilah/Documents/Learn/coursera/2/confusion/src/shared/baseUrl.js":"21","/Users/mharisfadhilah/Documents/Learn/coursera/2/confusion/src/redux/action/ActionTypes.js":"22"},{"size":705,"mtime":1612374760457,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1611249477556,"results":"25","hashOfConfig":"24"},{"size":590,"mtime":1614498356720,"results":"26","hashOfConfig":"24"},{"size":3193,"mtime":1614504846345,"results":"27","hashOfConfig":"24"},{"size":767,"mtime":1614498356726,"results":"28","hashOfConfig":"24"},{"size":5034,"mtime":1613582898860,"results":"29","hashOfConfig":"24"},{"size":4185,"mtime":1612883365686,"results":"30","hashOfConfig":"24"},{"size":2566,"mtime":1612374983075,"results":"31","hashOfConfig":"24"},{"size":2472,"mtime":1614499836351,"results":"32","hashOfConfig":"24"},{"size":6659,"mtime":1614504846345,"results":"33","hashOfConfig":"24"},{"size":1412,"mtime":1614499836350,"results":"34","hashOfConfig":"24"},{"size":10141,"mtime":1614498356722,"results":"35","hashOfConfig":"24"},{"size":3886,"mtime":1614504846345,"results":"36","hashOfConfig":"24"},{"size":177,"mtime":1614498356727,"results":"37","hashOfConfig":"24"},{"size":610,"mtime":1614504846345,"results":"38","hashOfConfig":"24"},{"size":627,"mtime":1614499836352,"results":"39","hashOfConfig":"24"},{"size":161,"mtime":1614498356726,"results":"40","hashOfConfig":"24"},{"size":568,"mtime":1614498356727,"results":"41","hashOfConfig":"24"},{"size":216,"mtime":1614498356724,"results":"42","hashOfConfig":"24"},{"size":2345,"mtime":1612545882583,"results":"43","hashOfConfig":"24"},{"size":47,"mtime":1614499836353,"results":"44","hashOfConfig":"24"},{"size":429,"mtime":1614499836352,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"vdwcnx",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/Users/mharisfadhilah/Documents/Learn/coursera/2/confusion/src/index.js",[],["93","94"],"/Users/mharisfadhilah/Documents/Learn/coursera/2/confusion/src/reportWebVitals.js",[],"/Users/mharisfadhilah/Documents/Learn/coursera/2/confusion/src/App.js",[],"/Users/mharisfadhilah/Documents/Learn/coursera/2/confusion/src/components/MainComponent.js",[],"/Users/mharisfadhilah/Documents/Learn/coursera/2/confusion/src/redux/configureStore.js",[],"/Users/mharisfadhilah/Documents/Learn/coursera/2/confusion/src/components/HeaderComponent.js",[],"/Users/mharisfadhilah/Documents/Learn/coursera/2/confusion/src/components/AboutComponent.js",[],"/Users/mharisfadhilah/Documents/Learn/coursera/2/confusion/src/components/FooterComponent.js",[],"/Users/mharisfadhilah/Documents/Learn/coursera/2/confusion/src/components/MenuComponent.js",[],"/Users/mharisfadhilah/Documents/Learn/coursera/2/confusion/src/components/DishdetailComponent.js",["95","96","97"],"import React, { Component } from 'react';\nimport { Control, Errors, LocalForm } from 'react-redux-form';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem, Button, Card, CardBody, CardImg, CardText, CardTitle, FormGroup, Label, Modal, ModalBody, ModalHeader } from 'reactstrap';\nimport { baseUrl } from '../shared/baseUrl';\nimport { Loading } from './LoadingComponent';\n\n    // ====validation====== //\n\n    const minLength = (len) => (val) => val && (val.length >= len);\n    const maxLength = (len) => (val) => !val || (val.length <= len);\n\n    // ====validation====== //\n\nclass CommentForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            isModalOpen: false\n        }\n        this.toogleModal = this.toogleModal.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    toogleModal(){\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        })\n    }\n\n    handleSubmit(values) {\n        console.log(values)\n        alert('current value : ' + JSON.stringify(values))\n        this.props.addComment(this.props.dishId,values.rating,values.author, values.comment)\n    }\n    \n    render() {\n        return(\n            <div>\n                <Button outline onClick={this.toogleModal} className=\"secondary\"><span className=\"fa fa-pencil fa-lg\"></span> Submit Comment</Button>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toogleModal}>\n                    <ModalHeader toggle={this.toogleModal}>Submit Comment</ModalHeader>\n                    <ModalBody>\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                            <FormGroup>\n                                <Label htmlFor=\"rating\">Rating</Label>\n                                <Control.select model=\".rating\" id=\"rating\" name=\"rating\" className=\"form-control\">\n                                    <option>1</option>\n                                    <option>2</option>\n                                    <option>3</option>\n                                    <option>4</option>\n                                    <option>5</option>\n                                </Control.select>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"author\">Your Name</Label>\n                                <Control.text model=\".author\" id=\"author\" name=\"author\" placeholder=\"Your Name\" className=\"form-control\" validators={{minLength: minLength(3), maxLength: maxLength(15)}}/>\n                                <Errors\n                                    className=\"text-danger\" model=\".author\" show=\"touched\" messages={{\n                                        minLength: \"Must be greater than 2 characters\",\n                                        maxLength: \"Must be 15 characters or less\"\n                                    }}\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"comment\">Comment</Label>\n                                <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\" className=\"form-control\" rows=\"6\" />\n                            </FormGroup>\n                            <Button type=\"submit\" color=\"primary\" >Submit</Button>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n            </div>\n        )\n    }\n}\n\n    const RenderComment = ({comments, dishId, addComment}) => {\n        console.log(addComment,dishId)\n        if(comments) {\n            const comment = comments.map( (res) =>  {\n                const date = new Date(res.date)\n                const dateTimeFormat = new Intl.DateTimeFormat('en', { year: 'numeric', month: 'short', day: '2-digit' }) \n                const [{ value: month },,{ value: day },,{ value: year }] = dateTimeFormat.formatToParts(date)\n                return (\n                    <ul key={res.id} className='list-unstyled'>\n                        <li>{res.comment}</li>\n                        <br/>\n                        <li>--{res.author} , {`${month} ${day}, ${year}`}</li>\n                    </ul>\n                )\n            })\n\n            return (\n                <div className='col-12 col-md-5 m-1'>\n                    <h4>Comments</h4>\n                    {comment}\n                    <CommentForm dishId={dishId} addComment={addComment}/>\n                </div>\n            )\n        }\n        else {\n            return (<div></div>)\n        }\n    }\n\n    const RenderDish = ({dish}) => {\n        if(dish) {\n            return(\n            <div className='col-12 col-md-5 m-1'>\n                <Card>\n                   <CardImg top src={baseUrl + dish.image} alt={dish.name}/>\n                   <CardBody>\n                      <CardTitle>{dish.name}</CardTitle>\n                      <CardText>{dish.description}</CardText>\n                   </CardBody>\n                </Card>\n             </div>\n            )\n        }\n        else {\n            return (\n                <div></div>\n            )\n        }\n    }\n\n    function DishDetail(props) {\n        console.log(props)\n        if(props.isLoading){\n            return (\n                <div className='container'>\n                    <div className='row'>\n                        <Loading/>\n                    </div>\n                </div>\n            )\n        }\n        else if(props.errMess) {\n            return (\n                <div className='container'>\n                    <div className='row'>\n                        <h4>{props.errMess}</h4>\n                    </div>\n                </div>\n            )\n        }\n        else if(props.dish) {\n            return(\n                <div className='container'>\n                    <div className=\"row\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n                        </Breadcrumb>\n                        <div className=\"col-12\">\n                            <h3>{props.dish.name}</h3>\n                            <hr />\n                        </div> \n                    </div>\n                    <div className='row justify-content-center'>\n                        <RenderDish dish={props.dish}/>\n                        <RenderComment comments={props.comments} addComment={props.addComment} dishId={props.dish.id}/>\n                    </div>\n                </div>\n            )\n        }\n    }\n\n\nexport default DishDetail;","/Users/mharisfadhilah/Documents/Learn/coursera/2/confusion/src/components/HomeComponent.js",[],"/Users/mharisfadhilah/Documents/Learn/coursera/2/confusion/src/components/ContactComponent.js",["98","99","100","101","102","103","104"],"import React, { Component } from 'react';\nimport { Control, Errors, Form } from 'react-redux-form';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem, Col, Label, Button, Row } from 'reactstrap';\n\nconst required = (val) => val && val.length\nconst maxLength = (len) => (val) => !val || (val.length <= len)\nconst minLength = (len) => (val) => val && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val))\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val)\n\nclass Contact extends Component {\n\n    constructor(props) {\n        super(props)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleSubmit(values){\n        console.log('Current State is: ' + JSON.stringify(values));\n        alert('Current State is: ' + JSON.stringify(values))\n        this.props.resetFeedbackForm()\n    }\n\n\n    render() {\n\n        return (\n            <div className=\"container\">\n                    <div className=\"row\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                        </Breadcrumb>\n                        <div className=\"col-12\">\n                            <h3>Contact Us</h3>\n                            <hr />\n                        </div> \n                    </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                    <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                            <h5>Our Address</h5>\n                            <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                            </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"/\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\" href=\"/\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Send us your Feedback</h3>\n                    </div>\n                    <div className=\"col-12 col-md-9\">\n                        <Form model='feedback' onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\" placeholder=\"First Name\" className=\"form-control\"\n                                    validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}/>\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\" placeholder=\"Last Name\" className=\"form-control\"\n                                    validators={{\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\n                                    }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"telnum\" md={2}>Tel. Number</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\" placeholder=\"Tel. Number\" className=\"form-control\"\n                                    validators={{\n                                        required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                    }}\n                                    />\n                                    <Errors\n                                    className=\"text-danger\"\n                                    model=\".telnum\"\n                                    show=\"touched\"\n                                    messages={{\n                                        required: 'Required',\n                                        minLength: 'Must be greater than 2 characters',\n                                        maxLength: 'Must be 15 characters or less',\n                                        isNumber: 'Must Number'\n                                    }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\" placeholder=\"Email\" className=\"form-control\"\n                                     validators={\n                                        validEmail\n                                    }\n                                     />\n                                    <Errors\n                                    className=\"text-danger\"\n                                    model=\".email\"\n                                    show=\"touched\"\n                                    messages={{\n                                        validEmail: 'Invalid Email Address'\n                                    }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 6, offset:2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox model=\".agree\" type=\"checkbox\" name=\"agree\" className=\"form-check-input\"\n                                            /> {''}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{size:3, offset:1}}>\n                                    <Control.select model=\".contactType\" name=\"contactType\" className=\"form-control\"\n                                    >\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                                        rows=\"12\" className=\"form-control\"\n                                        />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Contact;","/Users/mharisfadhilah/Documents/Learn/coursera/2/confusion/src/redux/action/ActionCreators.js",[],"/Users/mharisfadhilah/Documents/Learn/coursera/2/confusion/src/redux/reducer/leaders.js",[],"/Users/mharisfadhilah/Documents/Learn/coursera/2/confusion/src/redux/reducer/comments.js",[],"/Users/mharisfadhilah/Documents/Learn/coursera/2/confusion/src/redux/reducer/promotions.js",[],"/Users/mharisfadhilah/Documents/Learn/coursera/2/confusion/src/redux/forms/forms.js",[],"/Users/mharisfadhilah/Documents/Learn/coursera/2/confusion/src/redux/reducer/dishes.js",[],"/Users/mharisfadhilah/Documents/Learn/coursera/2/confusion/src/components/LoadingComponent.js",[],"/Users/mharisfadhilah/Documents/Learn/coursera/2/confusion/src/shared/leaders.js",[],"/Users/mharisfadhilah/Documents/Learn/coursera/2/confusion/src/shared/baseUrl.js",[],"/Users/mharisfadhilah/Documents/Learn/coursera/2/confusion/src/redux/action/ActionTypes.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":48,"column":33,"nodeType":"111","endLine":48,"endColumn":116},{"ruleId":"109","severity":1,"message":"112","line":58,"column":33,"nodeType":"111","endLine":58,"endColumn":204},{"ruleId":"109","severity":1,"message":"113","line":68,"column":33,"nodeType":"111","endLine":68,"endColumn":132},{"ruleId":"109","severity":1,"message":"112","line":75,"column":37,"nodeType":"111","endLine":78,"endColumn":45},{"ruleId":"109","severity":1,"message":"112","line":94,"column":37,"nodeType":"111","endLine":98,"endColumn":39},{"ruleId":"109","severity":1,"message":"112","line":114,"column":37,"nodeType":"111","endLine":118,"endColumn":39},{"ruleId":"109","severity":1,"message":"112","line":135,"column":37,"nodeType":"111","endLine":139,"endColumn":40},{"ruleId":"109","severity":1,"message":"114","line":154,"column":45,"nodeType":"111","endLine":155,"endColumn":47},{"ruleId":"109","severity":1,"message":"110","line":161,"column":37,"nodeType":"111","endLine":162,"endColumn":38},{"ruleId":"109","severity":1,"message":"113","line":171,"column":37,"nodeType":"111","endLine":173,"endColumn":43},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]